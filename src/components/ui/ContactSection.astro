---
// Composant section de contact réutilisable
import { MessageCircle, Sparkles } from 'lucide-react';

const { class: className = '' } = Astro.props;
---

<section class={`py-24 bg-gradient-to-br from-slate-50 to-white relative overflow-hidden ${className}`}>
  <!-- Fond décoratif subtil -->
  <div class="absolute inset-0 bg-gradient-to-br from-primary/5 via-transparent to-primary/3"></div>

  <div class="container mx-auto px-4 relative z-10">
    <div class="max-w-4xl mx-auto">
      <div class="text-center mb-16">
        <div class="inline-flex items-center gap-3 bg-gradient-to-r from-primary/10 to-primary/20 backdrop-blur-sm border border-primary/20 text-primary px-6 py-3 rounded-full text-sm font-semibold shadow-xl mb-8">
          <Sparkles className="w-4 h-4" />
          <span>Estimation gratuite</span>
        </div>

        <h2 class="text-4xl md:text-6xl font-black mb-6 text-gray-900">
          Une question, un projet ? <span class="bg-gradient-to-r from-primary via-primary/80 to-primary/60 bg-clip-text text-transparent">Écrivez-nous</span>
        </h2>

        <p class="text-xl text-gray-600 max-w-2xl mx-auto">
          Notre équipe vous répond sous 24h pour tous vos projets immobiliers
        </p>
      </div>

      <!-- Formulaire de contact personnalisé -->
      <div class="bg-white/80 backdrop-blur-xl rounded-3xl p-8 lg:p-12 shadow-2xl border border-white/20">
        <form id="contact-form" class="space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label for="contact-nom" class="block text-sm font-semibold mb-2 text-gray-700">Nom et prénom *</label>
              <input id="contact-nom" name="nom" type="text" required
                     class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary focus:border-transparent transition-colors duration-300 bg-white"
                     placeholder="Votre nom complet" />
            </div>
            <div>
              <label for="contact-email" class="block text-sm font-semibold mb-2 text-gray-700">Email *</label>
              <input id="contact-email" name="email" type="email" required
                     class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary focus:border-transparent transition-colors duration-300 bg-white"
                     placeholder="votre.email@exemple.fr" />
            </div>
          </div>

          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label for="contact-telephone" class="block text-sm font-semibold mb-2 text-gray-700">Téléphone *</label>
              <input id="contact-telephone" name="telephone" type="tel" required
                     class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary focus:border-transparent transition-colors duration-300 bg-white"
                     placeholder="06 12 34 56 78" />
            </div>
            <div>
              <label for="contact-ville" class="block text-sm font-semibold mb-2 text-gray-700">Ville</label>
              <input id="contact-ville" name="ville" type="text"
                     class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary focus:border-transparent transition-colors duration-300 bg-white"
                     placeholder="Votre ville (optionnel)" />
            </div>
          </div>

          <div>
            <label for="contact-type" class="block text-sm font-semibold mb-2 text-gray-700">Type de projet</label>
            <select id="contact-type" name="type" class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary focus:border-transparent transition-colors duration-300 bg-white">
              <option value="">Sélectionnez votre projet</option>
              <option value="estimation">Estimation immobilière</option>
              <option value="vente">Vente de bien</option>
              <option value="achat">Achat de bien</option>
              <option value="conseil">Conseil immobilier</option>
              <option value="autre">Autre</option>
            </select>
          </div>

          <div>
            <label for="contact-message" class="block text-sm font-semibold mb-2 text-gray-700">Votre message</label>
            <textarea id="contact-message" name="message" rows="4" required
                      class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary focus:border-transparent transition-colors duration-300 bg-white resize-none"
                      placeholder="Décrivez votre projet, vos besoins..."></textarea>
          </div>

          <div class="text-center">
            <button type="submit"
                    class="group relative bg-gradient-to-r from-primary to-primary text-white px-8 py-4 rounded-2xl font-bold text-lg hover:shadow-2xl hover:shadow-primary/25 transition-all duration-300 inline-flex items-center gap-3 hover:scale-105">
              <MessageCircle className="w-5 h-5 group-hover:rotate-12 transition-transform duration-300" />
              <span>ENVOYER MA DEMANDE</span>
              <div class="absolute -top-2 -right-2 bg-primary text-black text-xs font-black px-3 py-1 rounded-full animate-pulse">
                24H
              </div>
            </button>
          </div>

          <div class="text-center text-sm text-gray-600">
            <p>* Champs obligatoires • Réponse garantie sous 24h ouvrées • Service 100% gratuit</p>
          </div>
        </form>
      </div>
    </div>
  </div>
</section>

<script>
  // Gestion du formulaire de contact personnalisé - Envoi à HubSpot
  const contactForm = document.getElementById('contact-form') as HTMLFormElement | null;
  if (contactForm) {
    contactForm.addEventListener('submit', async (e) => {
      e.preventDefault();

      // Récupérer les données du formulaire
      const formData = new FormData(contactForm);
      const data = {
        fields: [
          {
            name: 'firstname',
            value: (formData.get('nom') as string)?.split(' ')[0] || ''
          },
          {
            name: 'lastname',
            value: (formData.get('nom') as string)?.split(' ').slice(1).join(' ') || ''
          },
          {
            name: 'email',
            value: formData.get('email') as string
          },
          {
            name: 'phone',
            value: formData.get('telephone') as string
          },
          {
            name: 'ville',
            value: formData.get('ville') as string
          },
          {
            name: 'type_de_projet',
            value: formData.get('type') as string
          },
          {
            name: 'notes',  // Propriété standard HubSpot pour les notes
            value: formData.get('message') as string
          },
          {
            name: 'description_du_projet',  // Propriété personnalisée de secours
            value: formData.get('message') as string
          }
        ],
        context: {
          pageUri: window.location.href,
          pageName: 'Formulaire de contact général'
        }
      };

      // Afficher un loader sur le bouton
      const submitBtn = contactForm.querySelector('button[type="submit"]') as HTMLButtonElement;
      const originalBtnContent = submitBtn?.innerHTML;
      if (submitBtn) {
        submitBtn.innerHTML = `
          <div class="animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-3"></div>
          <span>Envoi en cours...</span>
        `;
        submitBtn.disabled = true;
      }

      try {
        // Envoyer à HubSpot via l'API Forms
        const response = await fetch(`https://api.hsforms.com/submissions/v3/integration/submit/146996576/38e959ad-3e66-4d5d-b88c-89950c681230`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        });

        if (response.ok) {
          // Succès
          alert('✅ Votre demande a été envoyée avec succès ! Nous vous répondrons sous 24h.');
          contactForm.reset();
        } else {
          throw new Error('Erreur lors de l\'envoi');
        }
      } catch (error) {
        console.error('Erreur:', error);
        alert('❌ Une erreur est survenue lors de l\'envoi. Veuillez réessayer ou nous contacter directement.');
      } finally {
        // Réinitialiser le bouton
        if (submitBtn && originalBtnContent) {
          submitBtn.innerHTML = originalBtnContent;
          submitBtn.disabled = false;
        }
      }
    });
  }
</script>
