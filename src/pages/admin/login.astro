---
import Base from '@/layouts/Base.astro';
import { Form } from 'astro:components';

const title = "Administration - Connexion | L'Agence de Voglans";
const description = "Page de connexion sécurisée pour l'administration du site L'Agence de Voglans";
---

<Base title={title} description={description}>
  <div class="min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8">
    <div class="sm:mx-auto sm:w-full sm:max-w-md">
      <div class="bg-white py-8 px-4 shadow-xl rounded-2xl border border-gray-200 sm:px-10">
        <!-- Header -->
        <div class="text-center mb-8">
          <div class="mx-auto h-16 w-16 bg-primary/10 rounded-full flex items-center justify-center mb-4">
            <svg class="w-8 h-8 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
            </svg>
          </div>
          <h2 class="text-2xl font-bold text-gray-900">Administration</h2>
          <p class="mt-2 text-sm text-gray-600">Accès sécurisé à l'interface d'administration</p>
        </div>

        <!-- Formulaire de connexion -->
        <form id="login-form" class="space-y-6">
          <div>
            <label for="password" class="block text-sm font-medium text-gray-700 mb-2">
              Mot de passe administrateur
            </label>
            <div class="relative">
              <input
                id="password"
                name="password"
                type="password"
                required
                class="appearance-none block w-full px-3 py-3 border border-gray-300 rounded-lg placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition-colors duration-200"
                placeholder="••••••••"
              />
              <button type="button" id="toggle-password" class="absolute inset-y-0 right-0 pr-3 flex items-center">
                <svg id="eye-icon" class="h-5 w-5 text-gray-400 hover:text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                </svg>
                <svg id="eye-off-icon" class="h-5 w-5 text-gray-400 hover:text-gray-600 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21"></path>
                </svg>
              </button>
            </div>
          </div>

          <!-- Message d'erreur -->
          <div id="error-message" class="hidden bg-red-50 border border-red-200 rounded-lg p-3">
            <div class="flex">
              <svg class="h-5 w-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <div class="ml-3">
                <p id="error-text" class="text-sm text-red-800"></p>
              </div>
            </div>
          </div>

          <!-- Message de succès -->
          <div id="success-message" class="hidden bg-green-50 border border-green-200 rounded-lg p-3">
            <div class="flex">
              <svg class="h-5 w-5 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <div class="ml-3">
                <p class="text-sm text-green-800">Connexion réussie ! Redirection en cours...</p>
              </div>
            </div>
          </div>

          <div>
            <button
              type="submit"
              id="login-btn"
              class="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-primary hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary transition-colors duration-200"
            >
              <span class="absolute left-0 inset-y-0 flex items-center pl-3">
                <svg class="h-5 w-5 text-primary/70 group-hover:text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"></path>
                </svg>
              </span>
              Se connecter
            </button>
          </div>
        </form>

        <!-- Informations -->
        <div class="mt-8 text-center">
          <p class="text-xs text-gray-500">
            Accès réservé à l'administration • Mot de passe requis
          </p>
        </div>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const loginForm = document.getElementById('login-form');
      const passwordInput = document.getElementById('password');
      const loginBtn = document.getElementById('login-btn');
      const errorMessage = document.getElementById('error-message');
      const errorText = document.getElementById('error-text');
      const successMessage = document.getElementById('success-message');
      const togglePassword = document.getElementById('toggle-password');
      const eyeIcon = document.getElementById('eye-icon');
      const eyeOffIcon = document.getElementById('eye-off-icon');

      // Toggle visibilité mot de passe
      togglePassword?.addEventListener('click', () => {
        const type = passwordInput?.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput?.setAttribute('type', type);

        eyeIcon?.classList.toggle('hidden');
        eyeOffIcon?.classList.toggle('hidden');
      });

      // Gestion de la soumission
      loginForm?.addEventListener('submit', async (e) => {
        e.preventDefault();

        const password = passwordInput?.value;

        if (!password) {
          showError('Veuillez saisir votre mot de passe');
          return;
        }

        // Afficher le chargement
        loginBtn.innerHTML = `
          <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          <span>Connexion...</span>
        `;
        loginBtn.disabled = true;

        try {
          // Appel à l'API d'authentification
          const response = await fetch('/api/admin/auth', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ password })
          });

          const data = await response.json();

          if (response.ok && data.success) {
            // Connexion réussie
            showSuccess();

            // Stocker le token/session
            localStorage.setItem('admin_token', data.token);
            localStorage.setItem('admin_authenticated', 'true');

            // Redirection vers le CRM après 1 seconde
            setTimeout(() => {
              window.location.href = '/admin/crm';
            }, 1000);

          } else {
            // Erreur d'authentification
            showError(data.error || 'Mot de passe incorrect');
            loginBtn.innerHTML = 'Se connecter';
            loginBtn.disabled = false;
          }

        } catch (error) {
          console.error('Erreur de connexion:', error);
          showError('Erreur de connexion. Veuillez réessayer.');
          loginBtn.innerHTML = 'Se connecter';
          loginBtn.disabled = false;
        }
      });

      function showError(message) {
        errorText.textContent = message;
        errorMessage.classList.remove('hidden');
        successMessage.classList.add('hidden');
      }

      function showSuccess() {
        successMessage.classList.remove('hidden');
        errorMessage.classList.add('hidden');
      }
    });
  </script>
</Base>
