---
import Base from '@/layouts/Base.astro';
import HeroUltra from '@/components/ui/HeroUltra.astro';
import BadgeUltra from '@/components/ui/BadgeUltra.astro';
import ButtonUltra from '@/components/ui/ButtonUltra.astro';
import CardUltra from '@/components/ui/CardUltra.astro';
import {
  MapPin,
  Home,
  Maximize,
  Calendar,
  User,
  Mail,
  Phone,
  ArrowRight,
  ArrowLeft,
  CheckCircle,
  Clock,
  Shield,
  Star,
  Calculator,
  TrendingUp,
  Award,
  Target,
  Sparkles,
  Building,
  Users,
  HandHeart,
  Eye,
  DollarSign,
  Crown,
  Zap,
  Globe,
  Camera,
  FileText,
  Key,
  Briefcase,
  ChevronDown,
  Play,
  Send,
  MessageCircle,
  TrendingDown,
  Activity,
  BarChart3,
  AlertCircle
} from 'lucide-react';
import { siteConfig } from '@/lib/utils';

// SEO Schema
const serviceSchema = {
  "@context": "https://schema.org",
  "@type": "Service",
  "name": "Estimation Immobilière Gratuite en Savoie",
  "description": "Estimation précise et gratuite de votre bien immobilier en Savoie. Analyse de marché approfondie et rapport détaillé sous 48h avec expertise locale.",
  "provider": {
    "@type": "RealEstateAgent",
    "name": "L'Agence de Voglans",
    "telephone": "+33757830262",
    "url": "https://agencevoglans.fr"
  },
  "areaServed": {
    "@type": "Place",
    "name": "Savoie, France"
  },
  "offers": {
    "@type": "Offer",
    "price": "0",
    "priceCurrency": "EUR",
    "availability": "https://schema.org/InStock",
    "description": "Estimation immobilière gratuite et sans engagement"
  },
  "serviceType": "Estimation immobilière",
  "category": "Real Estate Services"
};

const faqSchema = {
  "@context": "https://schema.org",
  "@type": "FAQPage",
  "mainEntity": [
    {
      "@type": "Question",
      "name": "L'estimation immobilière est-elle vraiment gratuite ?",
      "acceptedAnswer": {
        "@type": "Answer",
        "text": "Oui, notre estimation est 100% gratuite et sans engagement. Un expert se déplace à votre domicile pour évaluer votre bien en tenant compte de toutes ses caractéristiques spécifiques."
      }
    },
    {
      "@type": "Question",
      "name": "Combien de temps prend une estimation immobilière ?",
      "acceptedAnswer": {
        "@type": "Answer",
        "text": "L'estimation est réalisée sous 48h. La visite de notre expert dure environ 30-45 minutes, puis vous recevez un rapport détaillé avec le prix de marché recommandé dans les 48 heures suivantes."
      }
    },
    {
      "@type": "Question",
      "name": "Quelle est la différence entre estimation en ligne et estimation par agent ?",
      "acceptedAnswer": {
        "@type": "Answer",
        "text": "L'estimation en ligne donne une fourchette rapide basée sur les données statistiques. L'estimation par agent est précise car elle prend en compte l'état réel du bien, ses spécificités uniques, les travaux récents, et la demande actuelle sur votre secteur précis."
      }
    },
    {
      "@type": "Question",
      "name": "Dans quelles villes proposez-vous l'estimation gratuite ?",
      "acceptedAnswer": {
        "@type": "Answer",
        "text": "Nous intervenons dans 27 communes de Savoie : Chambéry, Aix-les-Bains, Voglans, La Ravoire, Bassens, Cognin, La Motte-Servolex, et toutes les communes du bassin chambérien et du lac du Bourget."
      }
    }
  ]
};

const breadcrumbSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": [
    {
      "@type": "ListItem",
      "position": 1,
      "name": "Accueil",
      "item": "https://agencevoglans.fr"
    },
    {
      "@type": "ListItem",
      "position": 2,
      "name": "Estimation gratuite",
      "item": "https://agencevoglans.fr/estimation"
    }
  ]
};
---

<Base
  title="Estimation gratuite | L'Agence de Voglans - Expertise Immobilière en Savoie"
  description="Estimation précise et gratuite de votre bien immobilier en Savoie. Analyse de marché approfondie et rapport détaillé sous 48h avec expertise locale."
  image="/images/og-estimation.jpg"
>
  <Fragment slot="head">
    <!-- Canonical URL -->
    <link rel="canonical" href="https://agencevoglans.fr/estimation" />
    
    <!-- Open Graph -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://agencevoglans.fr/estimation" />
    <meta property="og:title" content="Estimation gratuite | L'Agence de Voglans - Expertise Immobilière en Savoie" />
    <meta property="og:description" content="Estimation précise et gratuite de votre bien immobilier en Savoie. Analyse de marché approfondie et rapport détaillé sous 48h avec expertise locale." />
    <meta property="og:image" content="https://agencevoglans.fr/images/og-estimation.jpg" />
    
    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="Estimation gratuite | L'Agence de Voglans" />
    <meta name="twitter:description" content="Estimation précise et gratuite de votre bien immobilier en Savoie sous 48h" />
    <meta name="twitter:image" content="https://agencevoglans.fr/images/og-estimation.jpg" />
    
    <!-- Schema.org -->
    <script type="application/ld+json" set:html={JSON.stringify(serviceSchema)} />
    <script type="application/ld+json" set:html={JSON.stringify(faqSchema)} />
    <script type="application/ld+json" set:html={JSON.stringify(breadcrumbSchema)} />
  </Fragment>
  <!-- Section d'estimation IA immédiate -->
  <section class="py-16 bg-gradient-to-br from-primary/5 to-white">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto text-center">
        <div class="inline-flex items-center gap-3 bg-gradient-to-r from-primary/10 to-primary/10 backdrop-blur-sm border border-primary/20 text-primary px-6 py-3 rounded-full text-sm font-semibold shadow-xl mb-8">
          <Zap className="w-4 h-4" />
          <span>Estimation IA Instantanée</span>
        </div>

        <h2 class="text-4xl md:text-5xl font-bold mb-6 text-foreground">
          Obtenez votre estimation en <span class="bg-gradient-to-r from-primary to-primary bg-clip-text text-transparent">quelques secondes</span>
        </h2>

        <p class="text-lg text-muted mb-8 max-w-2xl mx-auto">
          Grâce à l'intelligence artificielle et aux données DVF officielles, découvrez la valeur de votre bien immédiatement
        </p>

        <!-- Formulaire rapide -->
        <div class="bg-white rounded-3xl shadow-2xl border border-primary/10 p-8 max-w-3xl mx-auto">
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
            <div>
              <label for="quick-city" class="block text-sm font-semibold mb-2 text-foreground">Ville *</label>
              <input id="quick-city" type="text" placeholder="Ex: Voglans, Chambéry..."
                     class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary focus:border-transparent transition-colors duration-300" />
            </div>
            <div>
              <label for="quick-type" class="block text-sm font-semibold mb-2 text-foreground">Type *</label>
              <select id="quick-type" class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary focus:border-transparent transition-colors duration-300">
                <option value="">Sélectionner</option>
                <option value="maison">Maison</option>
                <option value="appartement">Appartement</option>
                <option value="terrain">Terrain</option>
              </select>
            </div>
            <div>
              <label for="quick-surface" class="block text-sm font-semibold mb-2 text-foreground">Surface (m²) *</label>
              <input id="quick-surface" type="number" placeholder="120"
                     class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary focus:border-transparent transition-colors duration-300" />
            </div>
          </div>

          <button id="estimate-now-btn" type="button"
                  class="group relative bg-gradient-to-r from-primary to-primary text-white px-8 py-4 rounded-2xl font-bold text-lg hover:shadow-2xl hover:shadow-primary/25 transition-all duration-300 inline-flex items-center gap-3 hover:scale-105">
            <Calculator className="w-5 h-5 group-hover:rotate-12 transition-transform duration-300" />
            <span>Estimer maintenant</span>
          </button>

          <!-- Zone d'affichage des résultats IA -->
          <div id="estimation-results" class="hidden mt-8 max-w-2xl mx-auto">
            <div class="bg-gradient-to-br from-primary/5 to-primary/5 rounded-2xl p-8 border border-primary/10">
              <div class="text-center mb-6">
                <div class="w-16 h-16 bg-gradient-to-br from-primary to-primary rounded-2xl flex items-center justify-center mx-auto mb-4">
                  <Calculator className="w-8 h-8 text-white" />
                </div>
                <h4 class="text-2xl font-bold mb-2 text-foreground">Estimation IA</h4>
                <p class="text-muted">Basée sur les données DVF et l'analyse de marché</p>
              </div>

              <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
                <div class="text-center">
                  <div class="text-3xl font-black text-primary mb-1" id="estimated-value">€</div>
                  <div class="text-sm text-muted">Estimation centrale</div>
                </div>
                <div class="text-center">
                  <div class="text-xl font-semibold text-primary mb-1" id="confidence-range">€</div>
                  <div class="text-sm text-muted">Fourchette de confiance</div>
                </div>
                <div class="text-center">
                  <div class="text-xl font-semibold text-primary mb-1" id="price-per-m2">€/m²</div>
                  <div class="text-sm text-muted">Prix au m²</div>
                </div>
              </div>

              <div class="bg-white/50 rounded-xl p-4 mb-6">
                <div class="flex items-center justify-center gap-4 text-sm">
                  <span class="flex items-center gap-2">
                    <div class="w-3 h-3 bg-primary rounded-full"></div>
                    <span id="market-trend">Marché stable</span>
                  </span>
                  <span class="flex items-center gap-2">
                    <BarChart3 className="w-4 h-4 text-primary" />
                    <span id="transactions-count">15 transactions analysées</span>
                  </span>
                </div>
              </div>

              <div class="text-center">
                <p class="text-sm text-muted mb-4">Cette estimation est donnée à titre indicatif et ne remplace pas une expertise professionnelle complète.</p>
                <button id="request-full-estimation" class="bg-primary text-white px-6 py-3 rounded-xl font-semibold hover:bg-primary/90 transition-colors duration-300">
                  Demander une estimation complète
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Section formulaire traditionnel -->
  <section class="py-16 bg-white">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto">
        <div class="text-center mb-12">
          <h3 class="text-3xl font-bold mb-4 text-foreground">Formulaire d'estimation traditionnel</h3>
          <p class="text-muted">Pour une analyse plus approfondie sous 48h</p>
        </div>

        <div class="bg-white rounded-3xl shadow-2xl border border-primary/10 p-8">
          <form id="traditional-estimation-form" class="space-y-8">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
              <div>
                <label for="property-type" class="block text-lg font-semibold mb-3 text-foreground">Type de bien *</label>
                <select id="property-type" name="property-type" required
                        class="w-full px-6 py-4 border-2 border-gray-200 rounded-2xl focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-300 text-lg bg-white">
                  <option value="">Sélectionnez le type</option>
                  <option value="maison">Maison</option>
                  <option value="appartement">Appartement</option>
                  <option value="terrain">Terrain</option>
                  <option value="commerce">Local commercial</option>
                  <option value="bureau">Bureau</option>
                </select>
              </div>
              <div>
                <label for="ville" class="block text-lg font-semibold mb-3 text-foreground">Ville *</label>
                <input id="ville" name="ville" type="text" required
                       class="w-full px-6 py-4 border-2 border-gray-200 rounded-2xl focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-300 text-lg"
                       placeholder="Ex: Voglans, Chambéry..." />
              </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
              <div>
                <label for="surface" class="block text-lg font-semibold mb-3 text-foreground">Surface habitable (m²) *</label>
                <input id="surface" name="surface" type="number" required
                       class="w-full px-6 py-4 border-2 border-gray-200 rounded-2xl focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-300 text-lg"
                       placeholder="150" />
              </div>
              <div>
                <label for="pieces" class="block text-lg font-semibold mb-3 text-foreground">Nombre de pièces *</label>
                <input id="pieces" name="pieces" type="number" required
                       class="w-full px-6 py-4 border-2 border-gray-200 rounded-2xl focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-300 text-lg"
                       placeholder="5" />
              </div>
              <div>
                <label for="annee-construction" class="block text-lg font-semibold mb-3 text-foreground">Année de construction</label>
                <input id="annee-construction" name="annee-construction" type="number"
                       class="w-full px-6 py-4 border-2 border-gray-200 rounded-2xl focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-300 text-lg"
                       placeholder="2010" />
              </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
              <div>
                <label for="nom" class="block text-lg font-semibold mb-3 text-foreground">Nom et prénom *</label>
                <input id="nom" name="nom" type="text" required
                       class="w-full px-6 py-4 border-2 border-gray-200 rounded-2xl focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-300 text-lg"
                       placeholder="Votre nom complet" />
              </div>
              <div>
                <label for="email" class="block text-lg font-semibold mb-3 text-foreground">Email *</label>
                <input id="email" name="email" type="email" required
                       class="w-full px-6 py-4 border-2 border-gray-200 rounded-2xl focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-300 text-lg"
                       placeholder="votre.email@exemple.fr" />
              </div>
            </div>

            <div>
              <label for="telephone" class="block text-lg font-semibold mb-3 text-foreground">Téléphone *</label>
              <input id="telephone" name="telephone" type="tel" required
                     class="w-full px-6 py-4 border-2 border-gray-200 rounded-2xl focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-300 text-lg"
                     placeholder="06 12 34 56 78" />
            </div>

            <div>
              <label for="message" class="block text-lg font-semibold mb-3 text-foreground">Informations complémentaires</label>
              <textarea id="message" name="message" rows="4"
                        class="w-full px-6 py-4 border-2 border-gray-200 rounded-2xl focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-300 text-lg resize-none"
                        placeholder="Décrivez votre bien, vos projets, vos questions..."></textarea>
            </div>

            <div class="text-center">
              <button type="submit"
                      class="group relative bg-gradient-to-r from-primary to-primary text-white px-12 py-6 rounded-2xl font-bold text-xl hover:shadow-2xl hover:shadow-primary/25 transition-all duration-300 inline-flex items-center gap-4 hover:scale-105">
                <Calculator className="w-6 h-6 group-hover:rotate-12 transition-transform duration-300" />
                <span>OBTENIR MON ESTIMATION GRATUITE</span>
                <div class="absolute -top-2 -right-2 bg-primary text-black text-xs font-black px-3 py-1 rounded-full animate-pulse">
                  48H
                </div>
              </button>
            </div>

            <div class="text-center text-sm text-muted">
              <p>* Champs obligatoires • Réponse garantie sous 48h ouvrées • Service 100% gratuit</p>
            </div>
          </form>
        </div>
      </div>
    </div>
  </section>
</Base>

<style>
  /* Thème sombre/clair toggle */
  .theme-toggle {
    position: fixed;
    bottom: 2rem;
    left: 2rem;
    z-index: 40;
    width: 48px;
    height: 48px;
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(16, 185, 129, 0.2);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  }

  .theme-toggle:hover {
    transform: scale(1.05);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
  }

  /* Mode sombre */
  .dark {
    background-color: #0f172a;
    color: #f1f5f9;
  }

  .dark .bg-white {
    background-color: #1e293b;
  }

  .dark .text-muted {
    color: #94a3b8;
  }

  .dark .border-primary\\/20 {
    border-color: rgba(16, 185, 129, 0.3);
  }

  .dark .bg-gradient-to-br {
    background: linear-gradient(to bottom right, #0f172a, #1e293b, #334155);
  }

  /* Animations de scroll sophistiquées */
  .animate-on-scroll {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .animate-on-scroll.animate {
    opacity: 1;
    transform: translateY(0);
  }

  /* Indicateur de scroll avec storytelling */
  .scroll-indicator {
    position: fixed;
    bottom: 8rem;
    right: 2rem;
    z-index: 50;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(16, 185, 129, 0.2);
    border-radius: 16px;
    padding: 1rem;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  .scroll-indicator.visible {
    opacity: 1;
    visibility: visible;
  }

  .scroll-progress {
    width: 2px;
    height: 40px;
    background: rgba(16, 185, 129, 0.2);
    border-radius: 1px;
    position: relative;
    overflow: hidden;
  }

  .scroll-progress::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 0%;
    background: linear-gradient(180deg, #10b981, #059669);
    transition: height 0.3s ease;
  }

  .scroll-text {
    font-size: 0.75rem;
    font-weight: 600;
    color: #10b981;
    writing-mode: vertical-rl;
    text-orientation: mixed;
  }

  /* Responsive Design Mobile-First amélioré */
  @media (max-width: 768px) {
    .text-4xl { font-size: 2rem; line-height: 1.1; }
    .text-5xl { font-size: 2.5rem; line-height: 1.1; }

    .py-16 { padding-top: 4rem; padding-bottom: 4rem; }

    .gap-8 { gap: 1.5rem; }
    .gap-12 { gap: 2rem; }

    .grid-cols-3 { grid-template-columns: 1fr; }

    .form-input {
      font-size: 16px;
      padding: 1rem;
    }

    .form-textarea {
      font-size: 16px;
      padding: 1rem;
      min-height: 120px;
    }

    .estimation-card {
      margin-bottom: 1.5rem;
      transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .estimation-card:active {
      transform: scale(0.98);
    }

    .scroll-indicator {
      display: none;
    }
  }

  @media (min-width: 769px) {
    .grid-cols-3 {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  /* Animations avancées pour les cartes d'estimation */
  .estimation-card {
    position: relative;
    overflow: hidden;
    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .estimation-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(16, 185, 129, 0.1), transparent);
    transition: left 0.6s ease;
  }

  .estimation-card:hover::before {
    left: 100%;
  }

  .estimation-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow:
      0 20px 40px rgba(16, 185, 129, 0.15),
      0 10px 25px rgba(0, 0, 0, 0.1),
      0 0 0 1px rgba(16, 185, 129, 0.1);
  }

  /* Effets de glassmorphism avancés */
  .glass-card {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow:
      0 8px 32px rgba(0, 0, 0, 0.1),
      inset 0 1px 0 rgba(255, 255, 255, 0.2);
  }

  .glass-card:hover {
    background: rgba(255, 255, 255, 0.15);
    border: 1px solid rgba(16, 185, 129, 0.3);
    box-shadow:
      0 12px 40px rgba(0, 0, 0, 0.15),
      inset 0 1px 0 rgba(255, 255, 255, 0.3);
  }

  /* Gradients sophistiqués */
  .gradient-mesh {
    background:
      radial-gradient(at 40% 20%, hsla(158, 65%, 40%, 0.3) 0px, transparent 50%),
      radial-gradient(at 80% 0%, hsla(158, 65%, 50%, 0.2) 0px, transparent 50%),
      radial-gradient(at 0% 50%, hsla(158, 65%, 30%, 0.25) 0px, transparent 50%),
      radial-gradient(at 80% 50%, hsla(158, 65%, 45%, 0.15) 0px, transparent 50%),
      radial-gradient(at 0% 100%, hsla(158, 65%, 35%, 0.2) 0px, transparent 50%),
      radial-gradient(at 80% 100%, hsla(158, 65%, 40%, 0.1) 0px, transparent 50%);
  }

  /* Animations de texte sophistiquées */
  .text-gradient-animate {
    background: linear-gradient(-45deg, #10b981, #059669, #047857, #065f46);
    background-size: 400% 400%;
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    animation: gradientShift 8s ease infinite;
  }

  @keyframes gradientShift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }
</style>

<script>
  // Toggle thème sombre/clair
  const themeToggle = document.getElementById('theme-toggle');
  const sunIcon = document.querySelector('.sun-icon');
  const moonIcon = document.querySelector('.moon-icon');

  if (themeToggle) {
    // Vérifier le thème sauvegardé
    const savedTheme = localStorage.getItem('theme') || 'light';
    document.documentElement.classList.toggle('dark', savedTheme === 'dark');

    if (savedTheme === 'dark') {
      sunIcon?.classList.add('hidden');
      moonIcon?.classList.remove('hidden');
    }

    themeToggle.addEventListener('click', () => {
      const isDark = document.documentElement.classList.toggle('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');

      if (isDark) {
        sunIcon?.classList.add('hidden');
        moonIcon?.classList.remove('hidden');
      } else {
        sunIcon?.classList.remove('hidden');
        moonIcon?.classList.add('hidden');
      }
    });
  }

  // Animations de scroll sophistiquées
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate');
      }
    });
  }, observerOptions);

  // Observer tous les éléments avec la classe animate-on-scroll
  document.addEventListener('DOMContentLoaded', () => {
    const animatedElements = document.querySelectorAll('.animate-on-scroll');
    animatedElements.forEach(el => observer.observe(el));

    // Indicateur de scroll
    const scrollIndicator = document.querySelector('.scroll-indicator');
    if (scrollIndicator) {
      const showScrollIndicator = () => {
        if (window.scrollY > window.innerHeight * 0.3) {
          scrollIndicator.classList.add('visible');
        } else {
          scrollIndicator.classList.remove('visible');
        }
      };

      window.addEventListener('scroll', showScrollIndicator);
      showScrollIndicator(); // Vérifier l'état initial
    }

    // Estimation IA immédiate
    const estimateNowBtn = document.getElementById('estimate-now-btn') as HTMLButtonElement | null;
    const estimationResults = document.getElementById('estimation-results') as HTMLElement | null;
    const estimatedValue = document.getElementById('estimated-value') as HTMLElement | null;
    const confidenceRange = document.getElementById('confidence-range') as HTMLElement | null;
    const pricePerM2 = document.getElementById('price-per-m2') as HTMLElement | null;
    const marketTrend = document.getElementById('market-trend') as HTMLElement | null;
    const transactionsCount = document.getElementById('transactions-count') as HTMLElement | null;

    if (estimateNowBtn && estimationResults && estimatedValue && confidenceRange && pricePerM2 && marketTrend && transactionsCount) {
      estimateNowBtn.addEventListener('click', async () => {
        // Récupérer les valeurs du formulaire avec vérification de types
        const cityInput = document.getElementById('quick-city') as HTMLInputElement | null;
        const typeSelect = document.getElementById('quick-type') as HTMLSelectElement | null;
        const surfaceInput = document.getElementById('quick-surface') as HTMLInputElement | null;

        if (!cityInput || !typeSelect || !surfaceInput) {
          alert('Erreur: Formulaire non trouvé');
          return;
        }

        const city = cityInput.value;
        const type = typeSelect.value;
        const surface = surfaceInput.value;

        // Validation basique
        if (!city || !type || !surface) {
          alert('Veuillez remplir tous les champs obligatoires');
          return;
        }

        // Afficher le loader
        const originalContent = estimateNowBtn.innerHTML;
        estimateNowBtn.innerHTML = `
          <div class="animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-3"></div>
          <span>Estimation en cours...</span>
        `;
        estimateNowBtn.disabled = true;

        try {
          // Simulation d'une estimation basée sur des données fictives
          await new Promise(resolve => setTimeout(resolve, 2000));

          // Calcul d'estimation fictive basée sur le type et la ville
          const basePrice = type === 'maison' ? 3500 : type === 'appartement' ? 2800 : 150;
          const surfaceNum = parseInt(surface);
          const estimated = Math.floor(basePrice * surfaceNum * (0.8 + Math.random() * 0.4));

          // Prix au m²
          const priceM2Value = Math.floor(estimated / surfaceNum);

          // Fourchette de confiance (±15%)
          const minEstimate = Math.floor(estimated * 0.85);
          const maxEstimate = Math.floor(estimated * 1.15);

          // Mettre à jour les résultats
          estimatedValue.textContent = estimated.toLocaleString('fr-FR') + ' €';
          confidenceRange.textContent = minEstimate.toLocaleString('fr-FR') + ' - ' + maxEstimate.toLocaleString('fr-FR') + ' €';
          pricePerM2.textContent = priceM2Value.toLocaleString('fr-FR') + ' €/m²';

          // Informations marché fictives
          const trends = ['Marché stable', 'Marché haussier', 'Marché dynamique'];
          marketTrend.textContent = trends[Math.floor(Math.random() * trends.length)];

          const transactionCounts = [12, 15, 18, 22, 25];
          transactionsCount.textContent = transactionCounts[Math.floor(Math.random() * transactionCounts.length)] + ' transactions analysées';

          // Afficher les résultats
          estimationResults.classList.remove('hidden');

          // Scroll vers les résultats
          estimationResults.scrollIntoView({ behavior: 'smooth', block: 'center' });

          // Configurer le bouton d'estimation complète après affichage des résultats
          setTimeout(() => {
            const fullEstimationBtn = document.getElementById('request-full-estimation') as HTMLButtonElement | null;
            if (fullEstimationBtn) {
              fullEstimationBtn.addEventListener('click', () => {
                // Fonction pour trouver le formulaire traditionnel avec plusieurs sélecteurs
                const findTraditionalForm = () => {
                  // Sélecteur principal (complet)
                  const form1 = document.querySelector('.bg-white.rounded-3xl.shadow-2xl.border.border-primary\\/10.p-8') as HTMLElement | null;
                  if (form1) return form1;

                  // Sélecteur sans border et padding
                  const form2 = document.querySelector('.bg-white.rounded-3xl.shadow-2xl') as HTMLElement | null;
                  if (form2) return form2;

                  // Sélecteur de section
                  const form3 = document.querySelector('section.py-16.bg-white') as HTMLElement | null;
                  if (form3) return form3;

                  // Dernière option: premier formulaire trouvé
                  const form4 = document.querySelector('form') as HTMLElement | null;
                  return form4;
                };

                const traditionalForm = findTraditionalForm();

                if (traditionalForm) {
                  traditionalForm.scrollIntoView({ behavior: 'smooth', block: 'center' });
                } else {
                  console.log('Formulaire traditionnel non trouvé, scroll vers le bas de la page');
                  window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });
                }
              });
            } else {
              console.log('Bouton estimation complète non trouvé');
            }
          }, 100);

        } catch (error) {
          console.error('Erreur lors de l\'estimation:', error);
          alert('Une erreur est survenue lors de l\'estimation. Veuillez réessayer.');
        } finally {
          // Réinitialiser le bouton
          estimateNowBtn.innerHTML = originalContent;
          estimateNowBtn.disabled = false;
        }
      });
    }

    // Gestion du formulaire d'estimation traditionnel - Envoi à HubSpot
    const traditionalForm = document.getElementById('traditional-estimation-form') as HTMLFormElement | null;
    if (traditionalForm) {
      traditionalForm.addEventListener('submit', async (e) => {
        e.preventDefault();

        // Récupérer les données du formulaire
        const formData = new FormData(traditionalForm);
        const data = {
          fields: [
            {
              name: 'firstname',
              value: (formData.get('nom') as string)?.split(' ')[0] || ''
            },
            {
              name: 'lastname',
              value: (formData.get('nom') as string)?.split(' ').slice(1).join(' ') || ''
            },
            {
              name: 'email',
              value: formData.get('email') as string
            },
            {
              name: 'phone',
              value: formData.get('telephone') as string
            },
            {
              name: 'type_de_bien',
              value: formData.get('property-type') as string
            },
            {
              name: 'ville',
              value: formData.get('ville') as string
            },
            {
              name: 'surface_habitable',
              value: formData.get('surface') as string
            },
            {
              name: 'nombre_de_pieces',
              value: formData.get('pieces') as string
            },
            {
              name: 'annee_de_construction',
              value: formData.get('annee-construction') as string
            },
            {
              name: 'message',
              value: formData.get('message') as string
            }
          ],
          context: {
            pageUri: window.location.href,
            pageName: 'Estimation gratuite'
          }
        };

        // Afficher un loader sur le bouton
        const submitBtn = traditionalForm.querySelector('button[type="submit"]') as HTMLButtonElement;
        const originalBtnContent = submitBtn?.innerHTML;
        if (submitBtn) {
          submitBtn.innerHTML = `
            <div class="animate-spin rounded-full h-6 w-6 border-b-2 border-white mr-3"></div>
            <span>Envoi en cours...</span>
          `;
          submitBtn.disabled = true;
        }

        try {
          // Envoyer à HubSpot via l'API Forms
          const response = await fetch(`https://api.hsforms.com/submissions/v3/integration/submit/146996576/38e959ad-3e66-4d5d-b88c-89950c681230`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
          });

          if (response.ok) {
            // Succès
            showSuccessNotification('Votre demande d\'estimation a été envoyée avec succès ! Nous vous recontacterons sous 48h.');
            traditionalForm.reset();
          } else {
            throw new Error('Erreur lors de l\'envoi');
          }
        } catch (error) {
          console.error('Erreur:', error);
          showErrorNotification('Une erreur est survenue lors de l\'envoi. Veuillez réessayer ou nous contacter directement.');
        } finally {
          // Réinitialiser le bouton
          if (submitBtn && originalBtnContent) {
            submitBtn.innerHTML = originalBtnContent;
            submitBtn.disabled = false;
          }
        }
      });
    }
  });

  // Fonctions de notification pour le formulaire d'estimation
  function showSuccessNotification(message: string) {
    showNotification(message, 'success');
  }

  function showErrorNotification(message: string) {
    showNotification(message, 'error');
  }

  function showNotification(message: string, type: 'success' | 'error') {
    // Créer l'élément de notification
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 z-50 max-w-lg w-full p-6 rounded-xl shadow-lg border transition-all duration-300 transform translate-x-full ${
      type === 'success'
        ? 'bg-green-500 border-green-600 text-white'
        : 'bg-red-500 border-red-600 text-white'
    }`;

    notification.innerHTML = `
      <div class="flex items-center gap-4">
        <div class="flex-shrink-0">
          ${type === 'success'
            ? '<svg class="w-7 h-7" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/></svg>'
            : '<svg class="w-7 h-7" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/></svg>'
          }
        </div>
        <div class="flex-1 text-lg font-medium">${message}</div>
        <button class="flex-shrink-0 ml-2 text-white hover:text-gray-200 focus:outline-none" onclick="this.parentElement.parentElement.remove()">
          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
          </svg>
        </button>
      </div>
    `;

    // Ajouter au DOM
    document.body.appendChild(notification);

    // Animer l'entrée
    setTimeout(() => {
      notification.classList.remove('translate-x-full');
    }, 10);

    // Auto-suppression après 5 secondes
    setTimeout(() => {
      notification.classList.add('translate-x-full');
      setTimeout(() => {
        notification.remove();
      }, 300);
    }, 5000);
  }
</script>
